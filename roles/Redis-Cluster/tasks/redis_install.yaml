---
- name: redis package download
  get_url:
    url: "{{redis_download}}"
    dest: "{{redis_source_path}}"


- name: unzip redis package
  shell: cd "{{redis_source_path}}" &&  tar zxvf "redis-{{redis_gz_file}}" && cd "redis-{{ redis_version }}"
  register: unzip_status

- name: make redis package
  command: make USE_SYSTEMD=yes BUILD_WITH_SYSTEMD=yes PREFIX={{redis_app_path}}/redis-{{ redis_version }}
  args:
   chdir: "{{redis_source_path}}/redis-{{ redis_version }}"
  register: make_status

#- debug: msg="{{make_status.stdout}}"

- name: make test redis package
  command: make test
  args:
   chdir: "{{redis_source_path}}/redis-{{ redis_version }}"
  register: make_test_status
  when: make_status.stderr == ""


- debug: msg="{{make_test_status}}"

- name: make install redis package
  command: make install PREFIX={{redis_app_path}}/redis-{{ redis_version }}
  args:
   chdir: "{{redis_source_path}}/redis-{{ redis_version }}"
  register: make_install_status
  when: make_status.stderr == ""

- debug: msg="{{make_install_status.stderr}}"



- name: copy redis-cluster command
  ansible.builtin.copy:
    remote_src: true
    src: "{{redis_source_path}}/redis-{{redis_version}}/utils/create-cluster/create-cluster"
    dest: "{{redis_app_path}}/redis-{{ redis_version }}/bin/create-cluster"

- name: soft link redis-{{ redis_version }} to redis
  file:
    src: "{{redis_app_path}}/redis-{{ redis_version }}"
    dest: "{{redis_app_path}}/redis"
    state: link
    owner: "{{redis_user}}"
    group: "{{redis_group}}"
