---
- name: Printing the environment mariadb in Ansible
  shell: "cat /etc/environment|grep mariadb | wc -l"
  register: env_mariadb
- debug: msg="{{env_mariadb.stdout}}"

- name: add {{mariadb_bin_path}} to path
  lineinfile:
    dest: "/etc/environment"
    state: present
    regexp: '(PATH=["])(.*)(["])$'
    line: '\1\2:{{mariadb_bin_path}}\3'
    backrefs: yes
  when: env_mariadb.stdout == "0"

- name: source "/etc/environment"
  shell: source /etc/environment && echo $PATH
  become: true
  args:
     executable: /bin/bash
  register: profile_status

- debug: msg="profile={{profile_status.stdout}}"


- name: apt install package
  apt:
    name:
      - libncurses5
      - apt-file
      - libssl-dev
      - gdebi-core
      - openssl
      - libz-dev
    state: latest
    update_cache: yes
  become: true

- name: "check /lib/x86_64-linux-gnu libssl.so.1.0.0"
  stat: 
    path: "/lib/x86_64-linux-gnu/libssl.so.1.0.0"
  become: true
  register: check_libssl


- name: "check /lib/x86_64-linux-gnu  libcrypto.so.1.0.0"
  stat:
    path: "/lib/x86_64-linux-gnu/libcrypto.so.1.0.0"
  become: true
  register: check_libcrypto


- debug: msg="libssl.so.1.0.0 file doesn't exist"
  when: not check_libssl.stat.exists

- debug: msg="libcrypto.so.1.0.0 file doesn't  exist"
  when: not check_libcrypto.stat.exists


- name: "copy  openssl-1.0.1e.tar.gz openssl-1.0.1e.tar.gz to /tmp"
  copy:
    src: "{{role_path}}/files/openssl-1.0.1e.tar.gz"
    dest: "/tmp/"
  when: (not check_libssl.stat.exists) and (not check_libcrypto.stat.exists)

- name: unzip openssl-1.0.1e.tar.gz 
  ansible.builtin.shell: "cd /tmp/ && tar zxvf openssl-1.0.1e.tar.gz && cd openssl-1.0.1e && ./config shared zlib-dynamic && make"
  when: (not check_libssl.stat.exists) and (not check_libcrypto.stat.exists)