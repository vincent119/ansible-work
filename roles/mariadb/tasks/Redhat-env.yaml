---
# - name: check PATH in /etc/profile
#   shell: cat /etc/profile | grep -E '(PATH=)(["]?)([^\$].*)(["]?)(\$PATH)$'| wc -l
#   register: check_path

# - name: add path to /etc/profile
#   shell: "sed -i '$aPATH={{mariadb_bin_path}}:$PATH' /etc/profile"
#   when: check_path.stdout == "0"
#   become: true

# - name: Add go bin dir to $PATH if PATH does not exist
#   shell: "cat /etc/profile |grep mariadb | wc -l"
#   register: env_mariadb
# - debug: msg="{{env_mariadb.stdout}}"

# - name: "Add {{ mariadb_bin_path }} to PATH"
#   lineinfile:
#     path: "{{profile_file}}"
#     state: present
#     regexp: '(PATH=)(["]?)([\w|\/|\-|\:]+)(\$PATH?)(["]?)$'
#     line: '\1\3{{ mariadb_bin_path }}:\4'
#     backrefs: yes
#   when: env_mariadb.stdout == "0"

# - name: source "{{profile_file}}"
#   shell: source "{{profile_file}}" && echo $PATH
#   become: true
#   args:
#      executable: /bin/bash
#   register: profile_status

# - debug: msg="profile={{profile_status.stdout}}"



# - name: "yum install Dependency Package"
#   yum:
#     name: "{{item}}"
#     state: present
#     update_cache: yes
#   with_items:
#     - "@Development tools"
#     - python-devel
#     - epel-release
#     - python-pip
#     - MySQL-python
#     - zlib-devel 

- name: "check /usr/lib64 libssl.so.1.0.0"
  stat: 
    path: "/usr/lib64/libssl.so.1.0.0"
  become: true
  register: check_libssl

- debug: msg="{{check_libssl}}"

- name: "check /usr/lib64  libcrypto.so.1.0.0"
  stat:
    path: "/usr/lib64/libcrypto.so.1.0.0"
  become: true
  register: check_libcrypto

- debug: msg="libssl.so.1.0.0 file doesn't exist"
  when: not check_libssl.stat.exists

- debug: msg="libcrypto.so.1.0.0 file doesn't  exist"
  when: not check_libcrypto.stat.exists

- name: "copy  openssl-1.0.1e.tar.gz openssl-1.0.1e.tar.gz to /tmp"
  copy:
    src: "{{role_path}}/files/openssl-1.0.1e.tar.gz"
    dest: "/tmp/"
  when: (not check_libssl.stat.exists) and (not check_libcrypto.stat.exists)

- name: unzip openssl-1.0.1e.tar.gz 
  ansible.builtin.shell: "cd /tmp/ && tar zxvf openssl-1.0.1e.tar.gz && cd openssl-1.0.1e && ./config shared zlib-dynamic && make"
  when: (not check_libssl.stat.exists) and (not check_libcrypto.stat.exists)

- name: "copy link libssl.so.1.0.0 libcrypto.so.1.0.0 to /usr/lib64"
  shell: "cd /tmp/openssl-1.0.1e && cp libssl.so.1.0.0 libcrypto.so.1.0.0 /usr/lib64"

- name: soft link libcrypto.so.1.0.0
  ansible.builtin.file:
    src: /usr/lib64/libssl.so
    dest: "/usr/lib64/{{item}}"
    state: link
  with_items:
    - libssl.so.1.0.0
    - libssl.so.10
  when: (not check_libssl.stat.exists) and (not check_libcrypto.stat.exists)

- name: soft link libcrypto.so.1.0.0
  ansible.builtin.file:
    src: /usr/lib64/libcrypto.so
    dest: "/usr/lib64/{{item}}"
    state: link
  with_items:
    - libcrypto.so.1.0.0
    - libcrypto.so.10
  when: (not check_libssl.stat.exists) and (not check_libcrypto.stat.exists)
